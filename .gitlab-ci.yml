default:
  tags:
    - docker

image: ubuntu:jammy

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DEBEMAIL: code@hxr.io
  DEBFULLNAME: HXR CI

stages:
  - test
  - deploy

lint-job:
  stage: test
  script:
    - apt-get update
    - apt-get install --no-install-recommends --assume-yes shellcheck build-essential
    - make lint
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

release-job:
  stage: deploy
  script:
    - curl --location --output /usr/local/bin/release-cli "https://gitlab.com/api/v4/projects/gitlab-org%2Frelease-cli/packages/generic/release-cli/latest/release-cli-linux-amd64"
    - chmod +x /usr/local/bin/release-cli
    - release-cli -v
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'Built by automation'
    tag_name: '$CI_COMMIT_TAG'
#    assets:
#      links:
#        - name: 'Linux executable'
#          url: ''
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/

deploy-job:
  stage: deploy
  environment: production
  script:
    - '[[ ! -z "$CI_KEY" ]] || (echo "Warning: \$CI_KEY not set" && exit 1)'
    - apt-get update
    - apt-get install --no-install-recommends --assume-yes gnupg git devscripts build-essential debhelper dput
    - cat $CI_KEY | gpg --batch --import
    - echo $CI_PASS | gpg --batch --always-trust --yes --passphrase-fd 0 --pinentry-mode=loopback -s $(mktemp)
    - git config --global user.email "code@hxr.io"
    - git config --global user.name "HXR CI"
    - git fetch origin main
    - git merge -srecursive -Xours --allow-unrelated-histories origin/main
    - ls -la
    - PKG_VERSION="$(cat ./VERSION)-$(date +%Y%m%d%H%M)-ci.${CI_COMMIT_SHORT_SHA}"
    - dch --distribution jammy --newversion $PKG_VERSION automated CI
    - debuild --no-tgz-check -i -S
    - dput ppa:hxr-io/aesthetic-testing ../pass-mount_${PKG_VERSION}_source.changes
  rules:
    - if: $CI_COMMIT_BRANCH == "debian/latest"
